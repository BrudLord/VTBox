name: build release

on:
  schedule:
    # Every tuesday at 10
    - cron: '0 10 * * 2'
  workflow_dispatch:

concurrency:
  group: release_workflow
  cancel-in-progress: true

jobs:
  demo_app_authentication:
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Use the token
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api octocat

  check_release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions:
        write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the last release name
        id: get_release
        run: |
          release_name=$(gh release view -R hiddify/hiddify-app --json name -q .name)
          echo "release_name=${release_name}" >> $GITHUB_ENV

      - name: Check if release has changed
        id: check_release
        run: |
          if [ "${{ vars.LAST_HIDDIFY_RELEASE }}" == "${{ env.release_name }}" ]; then
            echo "Release has not changed. Exiting."
            exit 1
          else
            echo "Release has changed."
            echo "new_release=${{ env.release_name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Perform actions if release has changed
        if: steps.check_release.outputs.new_release != ''
        run: |
          echo "Performing actions for the new release: ${{ steps.check_release.outputs.new_release }}"
          gh variable set LAST_HIDDIFY_RELEASE --body "${{ steps.check_release.outputs.new_release }}"