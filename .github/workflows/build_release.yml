name: build release

on:
  schedule:
    # Every tuesday at 10
    - cron: '0 10 * * 2'
  workflow_dispatch:
    inputs:
      version:
        description: "Version name"
        required: true
        type: string
      build:
        description: "Build type"
        required: true
        type: choice
        default: "All"
        options:
          - All
          - Binary
          - Android
          - Apple
          - app-store
          - iOS
          - macOS
          - tvOS
          - macOS-standalone
          - publish-android
  push:
    branches:
      - main

concurrency:
  group: release_workflow
  cancel-in-progress: true

jobs:
  check_release:
    if: false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the last release name
        id: get_release
        run: |
          release_name=$(gh release view -R SagerNet/sing-box --json name -q .name)
          echo "release_name=${release_name}" >> $GITHUB_ENV

      - name: Check if release has changed
        id: check_release
        run: |
          if [ "${{ vars.LAST_SING_BOX_RELEASE }}" == "${{ env.release_name }}" ]; then
            echo "Release has not changed. Exiting."
            #exit 1
          else
            echo "Release has changed."
            echo "new_release=${{ env.release_name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Perform actions if release has changed
        if: steps.check_release.outputs.new_release != ''
        run: |
          echo "Performing actions for the new release: ${{ steps.check_release.outputs.new_release }}"
          gh variable set LAST_SING_BOX_RELEASE --body "${{ steps.check_release.outputs.new_release }}"

  create_release:
    runs-on: ubuntu-latest
    outputs:
      release_folder: ${{ steps.prepare.outputs.release_folder }}
    #needs: check_release
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Clone sing-box repository
        run: |
          git clone --recurse-submodules https://github.com/SagerNet/sing-box.git
          cd sing-box
          git checkout "v${{ vars.LAST_SING_BOX_RELEASE }}"

      - name: Rename sing-box to VTBox
        run: |
          find sing-box -depth -name '*sing-box*' -execdir bash -c 'mv "$1" "${1//sing-box/VTBox}"' _ {} \;
          find VTBox -depth -name '*nekohasekai*' -execdir bash -c 'mv "$1" "${1//nekohasekai/vtbox}"' _ {} \;
          sudo find VTBox -type f -exec sed -i 's/sing-box/VTBox/g' {} +
          cat VTBox/clients/android/app/build.gradle
          tree -a
          
          # Remove access from AndroidManifest.xml
          sed -i '/<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/<uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION"/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/<uses-permission android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE"/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/QUERY_ALL_PACKAGES/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/QueryAllPackagesPermission/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          sed -i '/<uses-permission$/d' VTBox/clients/android/app/src/main/AndroidManifest.xml
          
          # Rewrite team idproject.pbxproj
          # find VTBox/clients/apple -type f -exec sed -i 's/287TTNZF8L/F6CHJX72K5/g' {} +
          # find VTBox/clients/apple -type f -exec sed -i 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' {} +
          # find VTBox/clients/apple -type f -exec sed -i 's/Apple Development/Apple Distribution/g' {} +
          # find VTBox/clients/apple -type f -exec sed -i 's/Developer ID Application/Distribution ID Application/g' {} +
          # find VTBox/clients/apple -type f -exec sed -i 's/XC io nekohasekai sfavt system/vbox system provisioning profile/g' {} +
          # find VTBox/clients/apple -type f -exec sed -i 's/XC io nekohasekai sfavt standalone/vbox standalone provisioning profile/g' {} +

          find VTBox/clients/apple -type f -exec sed -i 's/io.nekohasekai.sfavt/org.sagernet.vbox/g' {} +
          find VTBox -type f -exec sed -i 's/5c5f3b78-b7a0-40c0-bcad-e6ef87bbefda/3c47c2b5-9d8d-49c4-9870-4d9baf4eab4f/g' {} +
          find VTBox -type f -exec sed -i 's/appID   = "6673731168"/appID   = "6743477276"/g' {} +
          find VTBox -type f -exec sed -i 's/nekohasekai/vtbox/g' {} +

          cp -f .github/workflows/project.pbxproj VTBox/clients/apple/VTBox.xcodeproj/project.pbxproj

      - name: Cat project.pbxproj
        run: cat VTBox/clients/apple/VTBox.xcodeproj/project.pbxproj

      - name: Cat AndroidManifest.xml
        run: cat VTBox/clients/android/app/src/main/AndroidManifest.xml

      - name: Cat app_store_connect/main.go
        run: cat VTBox/cmd/internal/app_store_connect/main.go

      - name: Restore sing-box cache
        id: cache_sing_box
        uses: actions/cache@v4
        with:
          path: VTBox
          key: VTBox-v36${{ vars.LAST_SING_BOX_RELEASE }}


  ex_build:
    uses: ./.github/workflows/build.yml
    needs:
      - create_release
    secrets: inherit