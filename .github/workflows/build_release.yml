name: build release

on:
  schedule:
    # Every tuesday at 10
    - cron: '0 10 * * 2'
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: release_workflow
  cancel-in-progress: true

jobs:
  check_release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the last release name
        id: get_release
        run: |
          release_name=$(gh release view -R SagerNet/sing-box --json name -q .name)
          echo "release_name=${release_name}" >> $GITHUB_ENV

      - name: Check if release has changed
        id: check_release
        run: |
          if [ "${{ vars.LAST_SING_BOX_RELEASE }}" == "${{ env.release_name }}" ]; then
            echo "Release has not changed. Exiting."
            #exit 1
          else
            echo "Release has changed."
            echo "new_release=${{ env.release_name }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Perform actions if release has changed
        if: steps.check_release.outputs.new_release != ''
        run: |
          echo "Performing actions for the new release: ${{ steps.check_release.outputs.new_release }}"
          gh variable set LAST_SING_BOX_RELEASE --body "${{ steps.check_release.outputs.new_release }}"

  create_release:
    runs-on: ubuntu-latest
    needs: check_release
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Clone sing-box repository
        run: |
          git clone https://github.com/SagerNet/sing-box.git
          cd sing-box
          git checkout "v${{ vars.LAST_SING_BOX_RELEASE }}"

      - name: Run ex-build
        id: run_ex_build
        run: |
          workflow_id=$(gh workflow view ex_build.yml --json id -q .id)
          run_id=$(gh workflow run ex_build.yml --json id -q .id)
          echo "Started workflow with ID: $run_id"

          # Ожидаем завершения workflow
          while :; do
            status=$(gh run view $run_id --json status -q .status)
            if [ "$status" == "completed" ]; then
              conclusion=$(gh run view $run_id --json conclusion -q .conclusion)
              echo "Workflow finished with status: $conclusion"
              if [ "$conclusion" != "success" ]; then
                exit 1
              fi
              break
            fi
            echo "Waiting for workflow to complete..."
            sleep 10
          done


#      - name: Rename sing-box to VTBox
#        run: |
#          find sing-box -depth -type d -name '*sing-box*' -execdir bash -c 'mv "$1" "${1//sing-box/VTBox}"' _ {} \;
#          find VTBox -type f -exec sed -i 's/sing-box/VTBox/g' {} +
#          tree -a